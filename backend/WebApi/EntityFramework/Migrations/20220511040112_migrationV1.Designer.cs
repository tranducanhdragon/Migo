// <auto-generated />
using System;
using EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220511040112_migrationV1")]
    partial class migrationV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework.Entity.Event", b =>
                {
                    b.Property<long>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EventStart")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1L,
                            EventDescription = "",
                            EventEnd = new DateTime(2022, 5, 11, 11, 1, 11, 749, DateTimeKind.Local).AddTicks(1260),
                            EventImage = "/assets/image/home/event1.png",
                            EventName = "LIKE THE MOON IN A NIGHT SKY 2022 / NHƯ TRĂNG TRONG ĐÊM...",
                            EventStart = new DateTime(2022, 5, 11, 11, 1, 11, 748, DateTimeKind.Local).AddTicks(235)
                        },
                        new
                        {
                            EventId = 2L,
                            EventDescription = "",
                            EventEnd = new DateTime(2022, 5, 11, 11, 1, 11, 749, DateTimeKind.Local).AddTicks(1615),
                            EventImage = "/assets/image/home/event2.png",
                            EventName = "Sunlit NYE 2022 at Sunset Sanato Beach Club",
                            EventStart = new DateTime(2022, 5, 11, 11, 1, 11, 749, DateTimeKind.Local).AddTicks(1611)
                        },
                        new
                        {
                            EventId = 3L,
                            EventDescription = "",
                            EventEnd = new DateTime(2022, 5, 11, 11, 1, 11, 749, DateTimeKind.Local).AddTicks(1619),
                            EventImage = "/assets/image/home/event3.png",
                            EventName = "Phú Quốc Odyssey 2022 ",
                            EventStart = new DateTime(2022, 5, 11, 11, 1, 11, 749, DateTimeKind.Local).AddTicks(1617)
                        });
                });

            modelBuilder.Entity("EntityFramework.Entity.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "admin"
                        });
                });

            modelBuilder.Entity("EntityFramework.Entity.Tour", b =>
                {
                    b.Property<long>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourGuideImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TourGuideName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TourImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TourLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TourName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("TourPrice")
                        .HasColumnType("float");

                    b.Property<string>("TourTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TourId");

                    b.ToTable("Tours");

                    b.HasData(
                        new
                        {
                            TourId = 1L,
                            TourDescription = "Zannier Hotels Bai San Coral is a luxury resort hidden in a natural conservation space.",
                            TourGuideImage = "/assets/image/community/tourguide1.png",
                            TourGuideName = "Zoey1",
                            TourImage = "/assets/image/community/tour1.png",
                            TourLocation = "Phú Yên, Việt Nam",
                            TourName = "A paradise on Earth",
                            TourPrice = 500.0,
                            TourTime = "3 days 2 nights"
                        },
                        new
                        {
                            TourId = 2L,
                            TourDescription = "This tour is for travelers who want to experience an enormous cave – but may not have time for Son Doong.",
                            TourGuideImage = "/assets/image/community/tourguide2.png",
                            TourGuideName = "Zoey2",
                            TourImage = "/assets/image/community/tour2.png",
                            TourLocation = "Quảng Bình, Việt Nam",
                            TourName = "Hang En Cave Adventure 2 Days with Oxalis",
                            TourPrice = 350.0,
                            TourTime = "2 days 1 nights"
                        },
                        new
                        {
                            TourId = 3L,
                            TourDescription = "Spend a night at the reputable Metropole in Hanoi and embark on the stylish Au Co.",
                            TourGuideImage = "/assets/image/community/tourguide3.png",
                            TourGuideName = "Zoey3",
                            TourImage = "/assets/image/community/tour3.png",
                            TourLocation = "Hà Nội & Quảng Ninh, VN",
                            TourName = "Luxury Cruise Stay",
                            TourPrice = 550.0,
                            TourTime = "2 days 1 nights"
                        });
                });

            modelBuilder.Entity("EntityFramework.Entity.TourGuide", b =>
                {
                    b.Property<long>("TourGuideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TourGuideDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourGuideImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TourGuideName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TourGuideId");

                    b.ToTable("TourGuides");

                    b.HasData(
                        new
                        {
                            TourGuideId = 1L,
                            TourGuideDescription = "10 năm kinh nghiệm về ngành lữ hành, Zoey 1 có kiến thức sâu rộng về mảng du lịch xa xỉ, tập trung vào thị trường Nhật Bản.",
                            TourGuideImage = "/assets/image/community/consultant1.png",
                            TourGuideName = "Zoey 1"
                        },
                        new
                        {
                            TourGuideId = 2L,
                            TourGuideDescription = "Đam mê với nghề và có nhiều năm dẫn các đoàn khách Âu/Mỹ thám hiểu những kì quan ở Việt Nam, Zoey 2 luôn đưa ra tư vấn phù hợp nhất tới du khách.",
                            TourGuideImage = "/assets/image/community/consultant2.png",
                            TourGuideName = "Zoey 2"
                        },
                        new
                        {
                            TourGuideId = 3L,
                            TourGuideDescription = "10 năm kinh nghiệm về ngành lữ hành, Zoey 1 có kiến thức sâu rộng về mảng du lịch xa xỉ, tập trung vào thị trường Nhật Bản.",
                            TourGuideImage = "/assets/image/community/consultant3.png",
                            TourGuideName = "Zoey 3"
                        });
                });

            modelBuilder.Entity("EntityFramework.Entity.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            Email = "admin@gmail.com",
                            Password = "70249761412257917910212813371042552712742",
                            RoleId = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("EntityFramework.Entity.User", b =>
                {
                    b.HasOne("EntityFramework.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
